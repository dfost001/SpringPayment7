package model.customer;
// Generated Jun 8, 2015 7:04:12 PM by Hibernate Tools 4.3.1




import exception_handler.LoggerResource;
import java.util.Date;
import java.util.Objects;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;

import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;

import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

/**
 * Country generated by hbm2java
 */
@Entity
@Table(name="country"
    ,catalog="sakila_2"
)
public class Country  implements java.io.Serializable {

     
     private Short countryId;
     private String countryName;
     private Date lastUpdate;
    // private Set<City> cities = new HashSet<City>(0);

    public Country() {
    }

    @NotNull
    @Id @GeneratedValue(strategy=IDENTITY)    
    @Column(name="country_id", unique=true, nullable=false)
    public Short getCountryId() {
        return this.countryId;
    }
    
    public void setCountryId(Short countryId) {
        this.countryId = countryId;
    }

    
    @Column(name="country_name", nullable=false, length=50)
    public String getCountryName() {
        return this.countryName;
    }
    
    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_update", nullable=false, length=19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }
    
    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }
    
    

  /*  @OneToMany(fetch=FetchType.EAGER, mappedBy="countryId")
    public Set<City> getCities() {
        return this.cities;
    }
    
    public void setCities(Set<City> cities) {
        this.cities = cities;
    } */

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 67 * hash + Objects.hashCode(this.countryId);
        hash = 67 * hash + Objects.hashCode(this.countryName);
        hash = 67 * hash + Objects.hashCode(this.lastUpdate);
        return hash;
    }

    /* @Override
    public boolean equals(Object obj) {
        
        String msg = null;
        
        final Country other = (Country) obj;
        
        Logger logger = LoggerResource.createFileHandler(
                "C:\\Users\\dinah\\myLogs\\Spring7\\is_equal_logger.txt", this.getClass()); 
        
        if (this == obj) {
            msg="this == obj";
            logger.info(msg);
            return true;
        }
        if (obj == null) {
            msg="obj == null";
            logger.info(msg);
            return false;
        }
        if (getClass() != obj.getClass()) {
            msg="getClass() != obj.getClass()";
            logger.info(msg);
            return false;
        }
        
        if (!Objects.equals(this.countryName, other.countryName)) {
            msg="!Objects.equals(this.countryName, other.countryName)";
            logger.info(msg);
            return false;
        }
        if (this.countryId.equals(other.countryId)) {
             msg="!Objects.equals(this.countryId, other.countryId)";
            logger.info(msg);
            return false;
        }
        if (!this.lastUpdate.equals(other.lastUpdate)) {
            msg="!Objects.equals(this.lastUpdate, other.lastUpdate)";
            logger.info(msg);
            return false;
        }
        
        msg = "Country#equals returning true";
        logger.info(msg);
        
        return true;
    } */
} //end entity


